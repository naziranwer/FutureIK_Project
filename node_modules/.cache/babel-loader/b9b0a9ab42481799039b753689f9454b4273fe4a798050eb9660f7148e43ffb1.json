{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\futureik\\\\src\\\\components\\\\mainFolder.jsx\",\n  _s = $RefreshSig$();\n// // MainFolder.js\n// import React, { useState } from \"react\";\n// import Subfolder from \"./subFolder\";\n// import \"../App.css\";\n\n// const MainFolder = ({ mainFolder }) => {\n//   const [isChecked, setIsChecked] = useState(false);\n//   const [activeMain, setActiveMain] = useState(null);\n//   const [showSubFolder, setShowSubFolder] = useState(false);\n\n//   const toggleCheckbox = () => {\n//     setIsChecked(!isChecked);\n//   };\n\n//   const handleShowSubFolder = () => {\n//     setActiveMain(mainFolder);\n//     setShowSubFolder(!showSubFolder);\n//   };\n\n//   return (\n//     <div>\n//       <label>\n//         <input\n//           type=\"checkbox\"\n//           checked={isChecked}\n//           onChange={toggleCheckbox}\n//         />\n//         <h3 style={{ color: \"green\" }} onClick={handleShowSubFolder}>\n//           <span className=\"mr-2\">\n//             <i className=\"fas fa-folder-open text-blue-800\"></i>\n//           </span>\n//           {mainFolder.name}\n//         </h3>\n//       </label>\n//       {showSubFolder &&\n//         mainFolder?.subfolders?.map((subfolder, index) => (\n//           <div key={index} style={{ marginLeft: \"30px\" }}>\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={isChecked}\n//                 onChange={toggleCheckbox}\n//               />\n//               <Subfolder subfolder={subfolder} isChecked={isChecked} />\n//             </label>\n//           </div>\n//         ))}\n//     </div>\n//   );\n// };\n\n// export default MainFolder;\n\n// MainFolder.js\n// MainFolder.js\nimport React, { useState, useEffect } from \"react\";\nimport Subfolder from \"./subFolder\";\n// import \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainFolder = ({\n  mainFolder\n}) => {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n  const [activeMain, setActiveMain] = useState(null);\n  const [showSubFolder, setShowSubFolder] = useState(false);\n  const subfolders = (mainFolder === null || mainFolder === void 0 ? void 0 : mainFolder.subfolders) || [];\n  useEffect(() => {\n    // When all subfolder checkboxes are checked, set the main folder checkbox to checked\n    const allSubfoldersChecked = subfolders.every(subfolder => subfolder.isChecked);\n    setIsChecked(allSubfoldersChecked);\n  }, [subfolders]);\n  console.log(\"isChecked status\", isChecked);\n  const toggleCheckbox = () => {\n    // Toggle the main folder checkbox\n    setIsChecked(!isChecked);\n    // Update the isChecked property for all subfolders\n    // subfolders.forEach(subfolder => {\n    //   subfolder.isChecked = !isChecked;\n    // });\n  };\n\n  const handleSubfolderChange = () => {\n    // When a subfolder checkbox changes, update the main folder checkbox\n    const allSubfoldersChecked = subfolders.every(subfolder => subfolder.isChecked);\n    setIsChecked(allSubfoldersChecked);\n  };\n  const handleShowSubFolder = () => {\n    setActiveMain(mainFolder);\n    setShowSubFolder(!showSubFolder);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isChecked,\n        onChange: toggleCheckbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"green\",\n          marginLeft: \"10px\"\n        },\n        onClick: handleShowSubFolder,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-2\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-folder-open text-blue-800\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), mainFolder.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), showSubFolder && subfolders.map((subfolder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginLeft: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"bg-red-800\",\n        type: \"checkbox\",\n        checked: subfolder.isChecked,\n        onChange: () => {\n          // subfolder.isChecked = !subfolder.isChecked;\n          handleSubfolderChange();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Subfolder, {\n        subfolder: subfolder,\n        isChecked: subfolder.isChecked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(MainFolder, \"V1nOfRkHsNt/a0Q5zNqi2h3uqBM=\");\n_c = MainFolder;\nexport default MainFolder;\nvar _c;\n$RefreshReg$(_c, \"MainFolder\");","map":{"version":3,"names":["React","useState","useEffect","Subfolder","jsxDEV","_jsxDEV","MainFolder","mainFolder","_s","isChecked","setIsChecked","activeMain","setActiveMain","showSubFolder","setShowSubFolder","subfolders","allSubfoldersChecked","every","subfolder","console","log","toggleCheckbox","handleSubfolderChange","handleShowSubFolder","children","style","display","alignItems","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","color","marginLeft","onClick","className","name","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Admin/futureik/src/components/mainFolder.jsx"],"sourcesContent":["// // MainFolder.js\r\n// import React, { useState } from \"react\";\r\n// import Subfolder from \"./subFolder\";\r\n// import \"../App.css\";\r\n\r\n// const MainFolder = ({ mainFolder }) => {\r\n//   const [isChecked, setIsChecked] = useState(false);\r\n//   const [activeMain, setActiveMain] = useState(null);\r\n//   const [showSubFolder, setShowSubFolder] = useState(false);\r\n\r\n//   const toggleCheckbox = () => {\r\n//     setIsChecked(!isChecked);\r\n//   };\r\n\r\n//   const handleShowSubFolder = () => {\r\n//     setActiveMain(mainFolder);\r\n//     setShowSubFolder(!showSubFolder);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <label>\r\n//         <input\r\n//           type=\"checkbox\"\r\n//           checked={isChecked}\r\n//           onChange={toggleCheckbox}\r\n//         />\r\n//         <h3 style={{ color: \"green\" }} onClick={handleShowSubFolder}>\r\n//           <span className=\"mr-2\">\r\n//             <i className=\"fas fa-folder-open text-blue-800\"></i>\r\n//           </span>\r\n//           {mainFolder.name}\r\n//         </h3>\r\n//       </label>\r\n//       {showSubFolder &&\r\n//         mainFolder?.subfolders?.map((subfolder, index) => (\r\n//           <div key={index} style={{ marginLeft: \"30px\" }}>\r\n//             <label>\r\n//               <input\r\n//                 type=\"checkbox\"\r\n//                 checked={isChecked}\r\n//                 onChange={toggleCheckbox}\r\n//               />\r\n//               <Subfolder subfolder={subfolder} isChecked={isChecked} />\r\n//             </label>\r\n//           </div>\r\n//         ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MainFolder;\r\n\r\n\r\n// MainFolder.js\r\n// MainFolder.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Subfolder from \"./subFolder\";\r\n// import \"../App.css\";\r\n\r\n\r\nconst MainFolder = ({ mainFolder }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [activeMain, setActiveMain] = useState(null);\r\n  const [showSubFolder, setShowSubFolder] = useState(false);\r\n\r\n  const subfolders = mainFolder?.subfolders || [];\r\n\r\n  useEffect(() => {\r\n    // When all subfolder checkboxes are checked, set the main folder checkbox to checked\r\n    const allSubfoldersChecked = subfolders.every(subfolder => subfolder.isChecked);\r\n    setIsChecked(allSubfoldersChecked);\r\n  }, [subfolders]);\r\n  \r\n  console.log(\"isChecked status\",isChecked);\r\n  const toggleCheckbox = () => {\r\n    // Toggle the main folder checkbox\r\n    setIsChecked(!isChecked);\r\n    // Update the isChecked property for all subfolders\r\n    // subfolders.forEach(subfolder => {\r\n    //   subfolder.isChecked = !isChecked;\r\n    // });\r\n  };\r\n\r\n  const handleSubfolderChange = () => {\r\n    // When a subfolder checkbox changes, update the main folder checkbox\r\n    const allSubfoldersChecked = subfolders.every(subfolder => subfolder.isChecked);\r\n    setIsChecked(allSubfoldersChecked);\r\n  };\r\n\r\n  const handleShowSubFolder = () => {\r\n    setActiveMain(mainFolder);\r\n    setShowSubFolder(!showSubFolder);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isChecked}\r\n          onChange={toggleCheckbox}\r\n        />\r\n        <h3 style={{ color: \"green\", marginLeft: \"10px\" }} onClick={handleShowSubFolder}>\r\n          <span className=\"mr-2\">\r\n            <i className=\"fas fa-folder-open text-blue-800\"></i>\r\n          </span>\r\n          {mainFolder.name}\r\n        </h3>\r\n      </div>\r\n      {showSubFolder &&\r\n        subfolders.map((subfolder, index) => (\r\n          <div key={index} style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"30px\" }}>\r\n            <input\r\n            className=\"bg-red-800\"\r\n              type=\"checkbox\"\r\n              checked={subfolder.isChecked}\r\n              onChange={() => {\r\n                // subfolder.isChecked = !subfolder.isChecked;\r\n                handleSubfolderChange();\r\n              }}\r\n            />\r\n            <Subfolder subfolder={subfolder} isChecked={subfolder.isChecked} />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainFolder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}