{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\futureik\\\\src\\\\components\\\\FolderComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Folder = ({\n  folder,\n  onCheckboxChange\n}) => {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n\n  // Check if all files in the folder are checked\n  const areAllFilesChecked = folder.files.every(file => file.isChecked);\n\n  // Check if all subfolders are checked\n  const areAllSubfoldersChecked = folder.subfolders.every(subfolder => subfolder.isChecked);\n\n  // When all files and subfolders are checked, check the folder\n  if (areAllFilesChecked && areAllSubfoldersChecked) {\n    setIsChecked(true);\n  }\n\n  // When the folder checkbox is clicked, update the state and propagate the change to files and subfolders\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n    onCheckboxChange(folder, !isChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isChecked,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), folder.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"20px\"\n      },\n      children: [folder.files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: file.isChecked,\n            onChange: () => onCheckboxChange(file, !file.isChecked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), file.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)), folder.subfolders.map((subfolder, index) => /*#__PURE__*/_jsxDEV(Folder, {\n        folder: subfolder,\n        onCheckboxChange: onCheckboxChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Folder, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n_c = Folder;\nexport default Folder;\nvar _c;\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Folder","folder","onCheckboxChange","_s","isChecked","setIsChecked","areAllFilesChecked","files","every","file","areAllSubfoldersChecked","subfolders","subfolder","handleCheckboxChange","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","name","style","marginLeft","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Admin/futureik/src/components/FolderComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Folder = ({ folder, onCheckboxChange }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  // Check if all files in the folder are checked\r\n  const areAllFilesChecked = folder.files.every(file => file.isChecked);\r\n\r\n  // Check if all subfolders are checked\r\n  const areAllSubfoldersChecked = folder.subfolders.every(subfolder => subfolder.isChecked);\r\n\r\n  // When all files and subfolders are checked, check the folder\r\n  if (areAllFilesChecked && areAllSubfoldersChecked) {\r\n    setIsChecked(true);\r\n  }\r\n\r\n  // When the folder checkbox is clicked, update the state and propagate the change to files and subfolders\r\n  const handleCheckboxChange = () => {\r\n    setIsChecked(!isChecked);\r\n    onCheckboxChange(folder, !isChecked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input type=\"checkbox\" checked={isChecked} onChange={handleCheckboxChange} />\r\n        {folder.name}\r\n      </label>\r\n      <div style={{ marginLeft: \"20px\" }}>\r\n        {folder.files.map((file, index) => (\r\n          <div key={index}>\r\n            <label>\r\n              <input type=\"checkbox\" checked={file.isChecked} onChange={() => onCheckboxChange(file, !file.isChecked)} />\r\n              {file.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n        {folder.subfolders.map((subfolder, index) => (\r\n          <Folder key={index} folder={subfolder} onCheckboxChange={onCheckboxChange} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Folder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMS,kBAAkB,GAAGL,MAAM,CAACM,KAAK,CAACC,KAAK,CAACC,IAAI,IAAIA,IAAI,CAACL,SAAS,CAAC;;EAErE;EACA,MAAMM,uBAAuB,GAAGT,MAAM,CAACU,UAAU,CAACH,KAAK,CAACI,SAAS,IAAIA,SAAS,CAACR,SAAS,CAAC;;EAEzF;EACA,IAAIE,kBAAkB,IAAII,uBAAuB,EAAE;IACjDL,YAAY,CAAC,IAAI,CAAC;EACpB;;EAEA;EACA,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjCR,YAAY,CAAC,CAACD,SAAS,CAAC;IACxBF,gBAAgB,CAACD,MAAM,EAAE,CAACG,SAAS,CAAC;EACtC,CAAC;EAED,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAOgB,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEZ,SAAU;QAACa,QAAQ,EAAEJ;MAAqB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5EpB,MAAM,CAACqB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACRtB,OAAA;MAAKwB,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAV,QAAA,GAChCb,MAAM,CAACM,KAAK,CAACkB,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,kBAC5B3B,OAAA;QAAAe,QAAA,eACEf,OAAA;UAAAe,QAAA,gBACEf,OAAA;YAAOgB,IAAI,EAAC,UAAU;YAACC,OAAO,EAAEP,IAAI,CAACL,SAAU;YAACa,QAAQ,EAAEA,CAAA,KAAMf,gBAAgB,CAACO,IAAI,EAAE,CAACA,IAAI,CAACL,SAAS;UAAE;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC1GZ,IAAI,CAACa,IAAI;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC,GAJAK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN,CAAC,EACDpB,MAAM,CAACU,UAAU,CAACc,GAAG,CAAC,CAACb,SAAS,EAAEc,KAAK,kBACtC3B,OAAA,CAACC,MAAM;QAAaC,MAAM,EAAEW,SAAU;QAACV,gBAAgB,EAAEA;MAAiB,GAA7DwB,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0D,CAC7E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCIH,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AA2CZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}