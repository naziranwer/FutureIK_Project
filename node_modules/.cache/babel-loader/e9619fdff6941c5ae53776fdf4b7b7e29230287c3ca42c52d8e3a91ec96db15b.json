{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\futureik\\\\src\\\\components\\\\mainFolder.jsx\",\n  _s = $RefreshSig$();\n// MainFolder.js\nimport React, { useState } from \"react\";\nimport Subfolder from \"./subFolder\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainFolder = ({\n  mainFolder\n}) => {\n  _s();\n  var _mainFolder$subfolder;\n  const [isChecked, setIsChecked] = useState(false);\n  const [activeMain, setActiveMain] = useState(null);\n  const [showSubFolder, setShowSubFolder] = useState(false);\n  const toggleCheckbox = () => {\n    setIsChecked(!isChecked);\n  };\n  const handleShowSubFolder = () => {\n    setActiveMain(mainFolder);\n    setShowSubFolder(!showSubFolder);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isChecked,\n        onChange: toggleCheckbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"green\"\n        },\n        onClick: handleShowSubFolder,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-2\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-folder-open text-blue-800\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), mainFolder.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), showSubFolder && (mainFolder === null || mainFolder === void 0 ? void 0 : (_mainFolder$subfolder = mainFolder.subfolders) === null || _mainFolder$subfolder === void 0 ? void 0 : _mainFolder$subfolder.map((subfolder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"30px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: toggleCheckbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Subfolder, {\n          subfolder: subfolder,\n          isChecked: isChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MainFolder, \"TtuQTNHtDXE5mZaFTLmj8Hxy0A4=\");\n_c = MainFolder;\nexport default MainFolder;\nvar _c;\n$RefreshReg$(_c, \"MainFolder\");","map":{"version":3,"names":["React","useState","Subfolder","jsxDEV","_jsxDEV","MainFolder","mainFolder","_s","_mainFolder$subfolder","isChecked","setIsChecked","activeMain","setActiveMain","showSubFolder","setShowSubFolder","toggleCheckbox","handleShowSubFolder","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","className","name","subfolders","map","subfolder","index","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Admin/futureik/src/components/mainFolder.jsx"],"sourcesContent":["// MainFolder.js\r\nimport React, { useState } from \"react\";\r\nimport Subfolder from \"./subFolder\";\r\nimport \"../App.css\";\r\n\r\nconst MainFolder = ({ mainFolder }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [activeMain, setActiveMain] = useState(null);\r\n  const [showSubFolder, setShowSubFolder] = useState(false);\r\n\r\n  const toggleCheckbox = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  const handleShowSubFolder = () => {\r\n    setActiveMain(mainFolder);\r\n    setShowSubFolder(!showSubFolder);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isChecked}\r\n          onChange={toggleCheckbox}\r\n        />\r\n        <h3 style={{ color: \"green\" }} onClick={handleShowSubFolder}>\r\n          <span className=\"mr-2\">\r\n            <i className=\"fas fa-folder-open text-blue-800\"></i>\r\n          </span>\r\n          {mainFolder.name}\r\n        </h3>\r\n      </label>\r\n      {showSubFolder &&\r\n        mainFolder?.subfolders?.map((subfolder, index) => (\r\n          <div key={index} style={{ marginLeft: \"30px\" }}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={isChecked}\r\n                onChange={toggleCheckbox}\r\n              />\r\n              <Subfolder subfolder={subfolder} isChecked={isChecked} />\r\n            </label>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainFolder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}