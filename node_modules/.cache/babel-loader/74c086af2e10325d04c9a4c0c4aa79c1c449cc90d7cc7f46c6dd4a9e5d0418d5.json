{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\futureik\\\\src\\\\components\\\\mainFolder.jsx\",\n  _s = $RefreshSig$();\n// MainFolder.js\nimport React, { useState } from \"react\";\nimport Subfolder from \"./subFolder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainFolder = ({\n  mainFolder\n}) => {\n  _s();\n  var _mainFolder$subfolder;\n  const [isChecked, setIsChecked] = useState(false);\n  const [activeMain, setActiveMain] = useState(null);\n  const [showSubFolder, setShowSubFolder] = useState(false);\n  const toggleCheckbox = () => {\n    setIsChecked(!isChecked);\n  };\n  const handleShowSubFolder = () => {\n    setActiveMain(mainFolder);\n    // console.log(activeMain,\"is clicked\");\n    setShowSubFolder(!showSubFolder);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"green\"\n      },\n      onClick: handleShowSubFolder,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-2\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-folder text-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), mainFolder.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), showSubFolder && (mainFolder === null || mainFolder === void 0 ? void 0 : (_mainFolder$subfolder = mainFolder.subfolders) === null || _mainFolder$subfolder === void 0 ? void 0 : _mainFolder$subfolder.map((subfolder, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Subfolder, {\n        subfolder: subfolder,\n        isChecked: isChecked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MainFolder, \"TtuQTNHtDXE5mZaFTLmj8Hxy0A4=\");\n_c = MainFolder;\nexport default MainFolder;\nvar _c;\n$RefreshReg$(_c, \"MainFolder\");","map":{"version":3,"names":["React","useState","Subfolder","jsxDEV","_jsxDEV","MainFolder","mainFolder","_s","_mainFolder$subfolder","isChecked","setIsChecked","activeMain","setActiveMain","showSubFolder","setShowSubFolder","toggleCheckbox","handleShowSubFolder","children","style","color","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","name","subfolders","map","subfolder","index","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Admin/futureik/src/components/mainFolder.jsx"],"sourcesContent":["// MainFolder.js\r\nimport React, { useState } from \"react\";\r\nimport Subfolder from \"./subFolder\";\r\n\r\nconst MainFolder = ({ mainFolder }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [activeMain, setActiveMain] = useState(null);\r\n  const [showSubFolder, setShowSubFolder] = useState(false);\r\n\r\n  const toggleCheckbox = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  const handleShowSubFolder = () => {\r\n    setActiveMain(mainFolder);\r\n    // console.log(activeMain,\"is clicked\");\r\n    setShowSubFolder(!showSubFolder);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <input type=\"checkbox\" checked={isChecked} onChange={toggleCheckbox} /> */}\r\n      <h3 style={{color:\"green\"}} onClick={handleShowSubFolder}>\r\n      <span className=\"mr-2\">\r\n          <i className=\"fas fa-folder text-blue-500\"></i>\r\n        </span>\r\n        {mainFolder.name}</h3>\r\n      {showSubFolder &&\r\n        mainFolder?.subfolders?.map((subfolder, index) => (\r\n          <div key={index} style={{marginLeft:'30px'}}>\r\n            <Subfolder subfolder={subfolder} isChecked={isChecked} />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainFolder;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3BL,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMO,mBAAmB,GAAGA,CAAA,KAAM;IAChCJ,aAAa,CAACN,UAAU,CAAC;IACzB;IACAQ,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,oBACET,OAAA;IAAAa,QAAA,gBAEEb,OAAA;MAAIc,KAAK,EAAE;QAACC,KAAK,EAAC;MAAO,CAAE;MAACC,OAAO,EAAEJ,mBAAoB;MAAAC,QAAA,gBACzDb,OAAA;QAAMiB,SAAS,EAAC,MAAM;QAAAJ,QAAA,eAClBb,OAAA;UAAGiB,SAAS,EAAC;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,EACNnB,UAAU,CAACoB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACvBZ,aAAa,KACZP,UAAU,aAAVA,UAAU,wBAAAE,qBAAA,GAAVF,UAAU,CAAEqB,UAAU,cAAAnB,qBAAA,uBAAtBA,qBAAA,CAAwBoB,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC3C1B,OAAA;MAAiBc,KAAK,EAAE;QAACa,UAAU,EAAC;MAAM,CAAE;MAAAd,QAAA,eAC1Cb,OAAA,CAACF,SAAS;QAAC2B,SAAS,EAAEA,SAAU;QAACpB,SAAS,EAAEA;MAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADjDK,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BIF,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}